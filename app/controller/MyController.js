/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',

    onTreepanelItemClick: function(dataview, record, item, index, e, eOpts) {
        var selectedClass = record.data.text;
        console.log(selectedClass);
        Ext.Ajax.request({
            url:'data/'+selectedClass+'.json',
            method:'POST',
            async:false,
            withCredentials: true,
            useDefaultXhrHeader: false,
            success:function(response,opts){
                DataObj = Ext.decode(response.responseText);
                console.log(DataObj);
                /* var MyTaskContainer = Ext.getCmp('myTaskInnerGridPanel');
                MyTaskContainer.removeAll(false,true);
                MyTaskContainer.add(taskListgridView);
                //console.log(taskListgridView);
                mainPanel.setActiveItem(1);
                loginForm.setMasked(false);*/
            },
            failure : function(response){
                console.log('Error! ' + response.responseText);
                Ext.Msg.alert('Error','Error in fetching the data',Ext.emptyFn);
                //loginForm.setMasked(false);
                //return false;
            }
        });

        var GridStore = Ext.getStore('ClassJsonStore');
        GridStore.removeAll();
        GridStore.add(DataObj[selectedClass]);
    },

    onGridpanelItemClick: function(dataview, record, item, index, e, eOpts) {
        console.log(Ext.getCmp('frmStudentDetails').getForm());

        Ext.getCmp('frmStudentDetails').getForm().setValues(record.data);
    },

    onLoginButtonClick: function(button, e, eOpts) {
        userName = Ext.getCmp('txtUserName1').getValue();
        password = Ext.getCmp('txtPassword1').getValue();
        roleName = Ext.getCmp('txtRoleName1').getValue();
        if(userName == 'admin' && password == 'admin')
        {    
            var mainContainer = Ext.getCmp('mainContainer');
            mainContainer.getLayout().setActiveItem('studentContainer');
        }
        else
        {
            Ext.Msg.alert('Error','Please provide the valid credentials',Ext.emptyFn);
        }
    },

    onResetButtonClick: function(button, e, eOpts) {
        Ext.getCmp('txtUserName1').setValue('');
        Ext.getCmp('txtPassword1').setValue('');
        Ext.getCmp('txtRoleName1').setValue('');
    },

    onLogoutButtonClick: function(button, e, eOpts) {
        var mainContainer = Ext.getCmp('mainContainer');
        mainContainer.getLayout().setActiveItem(0);
        Ext.getCmp('txtUserName1').setValue('');
        Ext.getCmp('txtPassword1').setValue('');
        Ext.getCmp('txtRoleName1').setValue('');
    },

    init: function(application) {
        this.control({
            "#classTree": {
                itemclick: this.onTreepanelItemClick
            },
            "#studentDataGrid": {
                itemclick: this.onGridpanelItemClick
            },
            "#btnLogin": {
                click: this.onLoginButtonClick
            },
            "#btnReset": {
                click: this.onResetButtonClick
            },
            "#btnLogout": {
                click: this.onLogoutButtonClick
            }
        });
    }

});
